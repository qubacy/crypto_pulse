// Mocks generated by Mockito 5.4.4 from annotations
// in crypto_pulse/test/application/data/repository/crypto/_common/updater/impl/CryptocurrencyUpdaterImplTest.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:crypto_pulse/application/data/repository/crypto/_common/source/http/rest/_common/api/_common/RemoteCryptoHttpRestDataSourceApi.dart'
    as _i2;
import 'package:crypto_pulse/application/data/repository/crypto/_common/source/http/rest/_common/model/RemoteHttpRestCrypto.dart'
    as _i5;
import 'package:crypto_pulse/application/data/repository/crypto/_common/source/http/rest/_common/RemoteCryptoHttpRestDataSource.dart'
    as _i3;
import 'package:crypto_pulse/application/data/repository/crypto/_common/updater/_common/CryptocurrencyUpdater.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRemoteCryptoHttpRestDataSourceApi_0 extends _i1.SmartFake
    implements _i2.RemoteCryptoHttpRestDataSourceApi {
  _FakeRemoteCryptoHttpRestDataSourceApi_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RemoteCryptoHttpRestDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteCryptoHttpRestDataSource extends _i1.Mock
    implements _i3.RemoteCryptoHttpRestDataSource {
  MockRemoteCryptoHttpRestDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.RemoteCryptoHttpRestDataSourceApi get api => (super.noSuchMethod(
        Invocation.getter(#api),
        returnValue: _FakeRemoteCryptoHttpRestDataSourceApi_0(
          this,
          Invocation.getter(#api),
        ),
      ) as _i2.RemoteCryptoHttpRestDataSourceApi);

  @override
  set api(_i2.RemoteCryptoHttpRestDataSourceApi? _api) => super.noSuchMethod(
        Invocation.setter(
          #api,
          _api,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<List<_i5.RemoteHttpRestCrypto>> getCryptocurrencies(int? count) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCryptocurrencies,
          [count],
        ),
        returnValue: _i4.Future<List<_i5.RemoteHttpRestCrypto>>.value(
            <_i5.RemoteHttpRestCrypto>[]),
      ) as _i4.Future<List<_i5.RemoteHttpRestCrypto>>);
}

/// A class which mocks [CryptocurrencyUpdaterCallback].
///
/// See the documentation for Mockito's code generation for more information.
class MockCryptocurrencyUpdaterCallback extends _i1.Mock
    implements _i6.CryptocurrencyUpdaterCallback {
  MockCryptocurrencyUpdaterCallback() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void onCryptocurrenciesGotten(
    int? count,
    List<_i5.RemoteHttpRestCrypto>? cryptocurrencies,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onCryptocurrenciesGotten,
          [
            count,
            cryptocurrencies,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
