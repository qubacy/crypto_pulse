// Mocks generated by Mockito 5.4.4 from annotations
// in crypto_pulse/test/application/data/repository/crypto/_common/source/http/rest/impl/RemoteCryptoHttpRestDataSourceImplTest.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:crypto_pulse/application/data/repository/_common/source/http/context/_common/HttpContext.dart'
    as _i3;
import 'package:crypto_pulse/application/data/repository/_common/source/http/header/interceptor/_common/HttpHeaderInterceptor.dart'
    as _i6;
import 'package:crypto_pulse/application/data/repository/crypto/_common/source/http/rest/_common/api/_common/RemoteCryptoHttpRestDataSourceApi.dart'
    as _i5;
import 'package:crypto_pulse/application/data/repository/crypto/_common/source/http/rest/_common/api/_common/response/body/GetCryptocurrenciesResponse.dart'
    as _i4;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpContext_1 extends _i1.SmartFake implements _i3.HttpContext {
  _FakeHttpContext_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetCryptocurrenciesResponse_2 extends _i1.SmartFake
    implements _i4.GetCryptocurrenciesResponse {
  _FakeGetCryptocurrenciesResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RemoteCryptoHttpRestDataSourceApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteCryptoHttpRestDataSourceApi extends _i1.Mock
    implements _i5.RemoteCryptoHttpRestDataSourceApi {
  MockRemoteCryptoHttpRestDataSourceApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get httpClient => (super.noSuchMethod(
        Invocation.getter(#httpClient),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#httpClient),
        ),
      ) as _i2.Client);

  @override
  set httpClient(_i2.Client? _httpClient) => super.noSuchMethod(
        Invocation.setter(
          #httpClient,
          _httpClient,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.HttpContext get httpContext => (super.noSuchMethod(
        Invocation.getter(#httpContext),
        returnValue: _FakeHttpContext_1(
          this,
          Invocation.getter(#httpContext),
        ),
      ) as _i3.HttpContext);

  @override
  set httpContext(_i3.HttpContext? _httpContext) => super.noSuchMethod(
        Invocation.setter(
          #httpContext,
          _httpContext,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i6.HttpHeaderInterceptor> get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: <_i6.HttpHeaderInterceptor>[],
      ) as List<_i6.HttpHeaderInterceptor>);

  @override
  set interceptors(List<_i6.HttpHeaderInterceptor>? _interceptors) =>
      super.noSuchMethod(
        Invocation.setter(
          #interceptors,
          _interceptors,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<_i4.GetCryptocurrenciesResponse> getCryptocurrencies(int? count) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCryptocurrencies,
          [count],
        ),
        returnValue: _i7.Future<_i4.GetCryptocurrenciesResponse>.value(
            _FakeGetCryptocurrenciesResponse_2(
          this,
          Invocation.method(
            #getCryptocurrencies,
            [count],
          ),
        )),
      ) as _i7.Future<_i4.GetCryptocurrenciesResponse>);
}
