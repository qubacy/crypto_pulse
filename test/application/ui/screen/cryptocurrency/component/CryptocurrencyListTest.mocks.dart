// Mocks generated by Mockito 5.4.4 from annotations
// in crypto_pulse/test/application/ui/screen/cryptocurrency/component/CryptocurrencyListTest.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:ui' as _i5;

import 'package:crypto_pulse/application/ui/_common/presentation/CryptoPresentation.dart'
    as _i4;
import 'package:crypto_pulse/application/ui/screen/cryptocurrency/model/CryptocurrenciesModel.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CryptocurrenciesModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockCryptocurrenciesModel extends _i1.Mock
    implements _i2.CryptocurrenciesModel {
  MockCryptocurrenciesModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i3.Stream<List<_i4.CryptoPresentation>> getAllCryptoPresentations() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllCryptoPresentations,
          [],
        ),
        returnValue: _i3.Stream<List<_i4.CryptoPresentation>>.empty(),
      ) as _i3.Stream<List<_i4.CryptoPresentation>>);

  @override
  void toggleFavoriteCrypto(_i4.CryptoPresentation? crypto) =>
      super.noSuchMethod(
        Invocation.method(
          #toggleFavoriteCrypto,
          [crypto],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void getNextChunk() => super.noSuchMethod(
        Invocation.method(
          #getNextChunk,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
