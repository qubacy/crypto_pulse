// Mocks generated by Mockito 5.4.4 from annotations
// in crypto_pulse/test/application/ui/screen/home/HomeTest.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i6;

import 'package:crypto_pulse/application/data/repository/crypto/_common/CryptoRepository.dart'
    as _i2;
import 'package:crypto_pulse/application/ui/_common/presentation/CryptoPresentation.dart'
    as _i5;
import 'package:crypto_pulse/application/ui/screen/home/model/_common/HomeModel.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCryptoRepository_0 extends _i1.SmartFake
    implements _i2.CryptoRepository {
  _FakeCryptoRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomeModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeModel extends _i1.Mock implements _i3.HomeModel {
  MockHomeModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CryptoRepository get cryptoRepository => (super.noSuchMethod(
        Invocation.getter(#cryptoRepository),
        returnValue: _FakeCryptoRepository_0(
          this,
          Invocation.getter(#cryptoRepository),
        ),
      ) as _i2.CryptoRepository);

  @override
  set cryptoRepository(_i2.CryptoRepository? _cryptoRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #cryptoRepository,
          _cryptoRepository,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  _i4.Stream<List<_i5.CryptoPresentation>>
      get favoriteCryptoPresentationStream => (super.noSuchMethod(
            Invocation.getter(#favoriteCryptoPresentationStream),
            returnValue: _i4.Stream<List<_i5.CryptoPresentation>>.empty(),
          ) as _i4.Stream<List<_i5.CryptoPresentation>>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void clear() => super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void getFavoriteCryptoPresentations() => super.noSuchMethod(
        Invocation.method(
          #getFavoriteCryptoPresentations,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeFromFavorites(_i5.CryptoPresentation? crypto) =>
      super.noSuchMethod(
        Invocation.method(
          #removeFromFavorites,
          [crypto],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
